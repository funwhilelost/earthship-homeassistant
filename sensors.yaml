# from `sensor:`

# useful system monitors

- platform: systemmonitor
  resources:
    - type: processor_use
    - type: memory_use_percent
    - type: last_boot
    - type: disk_use_percent
    - type: load_1m
    - type: throughput_network_in

- platform: command_line
  name: Linux version
  command: "cat /proc/version"
  value_template: '{{value|truncate(30,True)}}'

- platform: command_line
  name: Disk Ops
  command: "iostat -d /dev/sda -m | sed '1d;2d;3d;5d' | awk '{ print $2 }'"
  # value_template: '{{value}}'

- platform: command_line
  name: Disk Read
  unit_of_measurement: 'MB/s'
  command: "iostat -d /dev/sda -m | sed '1d;2d;3d;5d' | awk '{ print $3 }'"

- platform: command_line
  name: Disk Write
  unit_of_measurement: 'MB/s'
  command: "iostat -d /dev/sda -m | sed '1d;2d;3d;5d' | awk '{ print $4 }'"

- platform: uptime
  unit_of_measurement: days

- platform: template
  sensors:
    server_uptime:
      friendly_name: "Uptime"
      icon_template: mdi:clock
      value_template: >-
        {% set lb = states('sensor.last_boot') %}
        {% if lb != 'unknown' %}
          {% set seconds = (as_timestamp(now()) - as_timestamp(lb))|int %}
          {% set days = (seconds / 86400)|int %}
          {% set seconds = seconds % 86400 %}
          {% set hours = (seconds / 3600)|int %}
          {% set seconds = seconds % 3600 %}
          {% set minutes = (seconds / 60)|int %}
          {% set seconds = seconds % 60 %}
          {% if hours == 0 and minutes == 0 %}
            {{ time }} seconds
          {% else %}
            {%- if days > 0 -%}
              {%- if days == 1 -%}
                1 day
              {%- else -%}
                {{ days }} days
              {%- endif -%}
            {%- endif -%}
            {%- if hours > 0 and days < 7 -%}
              {%- if days > 0 -%}
                {{ ', ' }}
              {%- endif -%}
              {%- if hours == 1 -%}
                1 hour
              {%- else -%}
                {{ hours }} hours
              {%- endif -%}
            {%- endif -%}
            {%- if days == 0 and minutes > 0 -%}
              {%- if hours > 0 -%}
                {{ ', ' }}{{ minutes }} min
              {%- else -%}
                {%- if minutes == 1 -%}
                  1 minute
                {%- else -%}
                  {{ minutes }} minutes
                {%- endif -%}
              {%- endif -%}
            {%- endif -%}
          {% endif %}
        {% else %}
          unknown
        {% endif %}


# create an actual REST sensor for the little PHP scraper
- platform: rest
  name: Water Sensors
  json_attributes:
    - snake_river_temp
    - lake_washington_temp
  resource: http://sensors.funwhilelost.com/water.php
  value_template: '{{ value_json.snake_river_temp }}'

# https://community.home-assistant.io/t/sun-values-not-valid/89398/2
- platform: template
  sensors:
    # Snake River from the scraper
    snake_river_temp:
      friendly_name: 'Snake River Temperature'
      value_template: '{{ states.sensor.water_sensors.attributes["snake_river_temp"] }}'
      icon_template: mdi:waves
      unit_of_measurement: '°F'

    # Lake Washington from the scraper
    lake_washington_temp:
      friendly_name: 'Lake Washington Temperature'
      value_template: '{{ states.sensor.water_sensors.attributes["lake_washington_temp"] }}'
      icon_template: mdi:waves
      unit_of_measurement: '°F'

    # Sunset & Sunrise
    next_sunrise:
      friendly_name: Sunrise
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom("%H:%M") }}'
    next_sunset:
      friendly_name: Sunset
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom("%H:%M") }}'
    solar_angle:
      friendly_name: "Sun angle"
      unit_of_measurement: 'degrees'
      value_template: "{{ state_attr('sun.sun', 'elevation') }}"
    local_wind_speed:
      friendly_name: "Wind speed"
      unit_of_measurement: 'mph'
      value_template: "{{ state_attr('weather.earth_ship', 'wind_speed') }}"
    local_wind_bearing:
      friendly_name: "Wind bearing"
      unit_of_measurement: 'degrees'
      value_template: "{{ state_attr('weather.earth_ship', 'wind_bearing') }}"
    local_temperature:
      friendly_name: "Local temperature"
      unit_of_measurement: '°F'
      value_template: "{{ state_attr('weather.earth_ship', 'temperature') }}"
    local_barometric_pressure:
      friendly_name: "Local barometric pressure"
      unit_of_measurement: 'mb'
      value_template: "{{ state_attr('weather.earth_ship', 'pressure') }}"
    local_humidity:
      friendly_name: "Local humidity"
      unit_of_measurement: '%'
      value_template: "{{ state_attr('weather.earth_ship', 'humidity') }}"

- platform: template
  sensors:
    kitchen_door:
      value_template: >-
        {% if states.binary_sensor.homeseer_technologies_unknown_type_0201_id_0008_sensor_3.state == 'on' %}
          Open
        {% elif states.binary_sensor.homeseer_technologies_unknown_type_0201_id_0008_sensor_3.state == 'off' %}
          Closed
        {% else %}
          n/a
        {% endif %}
      icon_template: >
        {% if states.binary_sensor.homeseer_technologies_unknown_type_0201_id_0008_sensor_3.state == 'on' %}
          mdi:door-open
        {% elif states.binary_sensor.homeseer_technologies_unknown_type_0201_id_0008_sensor_3.state == 'off' %}
          mdi:door-closed
        {% else %}
          mdi:help
        {% endif %} 

- platform: template
  sensors:
    porch_door:
      value_template: >-
        {% if states.binary_sensor.homeseer_technologies_unknown_type_0201_id_0008_sensor_4.state == 'on' %}
          Open
        {% elif states.binary_sensor.homeseer_technologies_unknown_type_0201_id_0008_sensor_4.state == 'off' %}
          Closed
        {% else %}
          n/a
        {% endif %}
      icon_template: >
        {% if states.binary_sensor.homeseer_technologies_unknown_type_0201_id_0008_sensor_4.state == 'on' %}
          mdi:door-open
        {% elif states.binary_sensor.homeseer_technologies_unknown_type_0201_id_0008_sensor_4.state == 'off' %}
          mdi:door-closed
        {% else %}
          mdi:help
        {% endif %} 

- platform: darksky
  api_key: !secret darksky_api_key
  forecast:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
  monitored_conditions:
    - icon
    - summary
    - nearest_storm_distance
    - nearest_storm_bearing
    - humidity
    - temperature
    - temperature_high
    - temperature_low
    - apparent_temperature
    - apparent_temperature_high
    - apparent_temperature_low
    - wind_speed
    - wind_bearing
    - precip_type
    - precip_probability
    - precip_accumulation
    - precip_intensity
    - precip_intensity_max
    - uv_index
    - daily_summary
    - pressure
    - visibility
  scan_interval:
    minutes: 15

- platform: radarr
  api_key: !secret radarr_api_key
  host: 192.168.0.14
  port: 7878

- platform: sonarr
  api_key: !secret sonarr_api_key
  host: 192.168.0.14
  port: 9191
  
- platform: xbox_live
  api_key: !secret xapi_api_key
  xuid:
    - funwhilelost
    - KCapp206
    - CottonXX48
    - CulturalCacti
